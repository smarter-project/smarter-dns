apiVersion: v1
kind: ConfigMap
metadata:
  name: smarterdnscorefile
  namespace: kube-system
data:
  Corefile: |
    .:353 {
      hosts /tmp/cridns/smarterdns {
        reload 5s
        fallthrough
      }
      forward . /etc/resolv.conf
      log
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: smarterdnsconfig
  namespace: kube-system
data:
  CLUSTER_DNS: "169.254.0.2"
  CLUSTER_DOMAIN: "cluster.local"
  DNS_LOGGING: "False"
  CRI_DIR: "unix:///var/run/crisock"
  CRI_FILE: "containerd.sock"
  WAIT_INTERVAL: "30"
  IFACE: "eth0"
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: smarter-dns-containerd
  namespace: kube-system
  labels:
    k8s-app: smarter-dns
spec:
  selector:
    matchLabels:
      k8s-app: smarter-dns
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        k8s-app: smarter-dns
    spec:
      nodeSelector:
        smarter.cri: containerd
      tolerations:
        - key: "smarter.type"
          operator: "Equal"
          value: "edge"
          effect: "NoSchedule"
      hostNetwork: true
      containers:
      - name: smarter-dns
        image: ghcr.io/smarter-project/smarter-dns:v1.3.10
        imagePullPolicy: Always
        resources:
          limits:
            memory: 270Mi
          requests:
            cpu: 100m
            memory: 150Mi
        args: [ "-conf", "/etc/coredns/corefile" ]
        envFrom:
          - configMapRef:
             name: smarterdnsconfig
        volumeMounts:
        # Defaults to using the standard directory containing the containerd socket
        - name: crisock
          mountPath: /var/run/crisock
        - name: config-volume
          mountPath: /etc/coredns
        - name: usrbin
          mountPath: /host/usr/bin
        - name: usrlocalbin
          mountPath: /host/usr/local/bin
        - name: criconfig
          mountPath: /var/lib/rancher/k3s/agent/etc
        ports:
        - containerPort: 353
          name: dns
          protocol: UDP
        - containerPort: 353
          name: dns-tcp
          protocol: TCP
        securityContext:
          privileged: true        
          capabilities:
            add:
            - NET_BIND_SERVICE
            - NET_ADMIN
            - SYS_MODULE            
          readOnlyRootFilesystem: false
      dnsPolicy: Default
      volumes:
        # Defaults to using the standard directory containing the containerd socket
        - name: crisock
          hostPath:
            path: /var/run/containerd
        - name: usrbin
          hostPath:
            path: /usr/bin
            type: DirectoryOrCreate
        - name: usrlocalbin
          hostPath:
            path: /usr/local/bin
            type: DirectoryOrCreate
        - name: criconfig
          hostPath:
            path: /var/lib/rancher/k3s/agent/etc
            type: DirectoryOrCreate
        - name: config-volume
          configMap:
            name: smarterdnscorefile
            items:
            - key: Corefile
              path: corefile
---
